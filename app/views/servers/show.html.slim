= render("header")
main
  table.properties
    tr
      th Name
      td = @server.name
    tr
      th Notes
      td == GitHub::Markup.render(".md", @server.notes)
    tr
      th Cores
      td = @server.cores
    tr
      th Memory
      td = @server.memory_format
    tr
      th Storage
      td
        - if @server.root
          =' @server.root_link
          ' (#{@server.root.decorate.size_format})
        - else
          = @server.storage_format
    /tr
      th Password
      td = @server.password
    /tr
      th Machine type
      td = @server.machine_type
    tr
      th ISO
      td = @server.iso_link
    /tr
      th Affinity group
      td = @server.affinity_group
    /tr
      th Appliance data
      td = @server.appliance_data
    tr
      th Template
      td = @server.template_link
    tr
      th Account
      td = @server.account_link
    /tr
      th Zone
      td = @server.zone_link
    tr
      th Host
      td = @server.host_link
    /tr
      th Appliance
      td = @server.appliance_link
    tr
      th Bundle
      td = @server.bundle_link
    /tr
      th Published at
      td = @server.published_at
    /tr
      th Base
      td = @server.base
    /tr
      th Current
      td = @server.current
  h2 Network Settings
  - @server.effective_zone.networks.order(:index).each.with_index do |net, i|
    h3 Port #{i} - #{net.name}
    table.properties
      - if @server.ipv4_address(net)
        tr
          th IPv4 Address
          td
            = @server.ipv4_address(net).ip
            ' /
            = @server.ipv4_address(net).subnet.prefix
        tr
          th IPv4 Gateway
          td
            = @server.ipv4_address(net).subnet.gateway
      - else
        tr
          th colspan=2 Configured via DHCP
  - if @server.zone
    h3 DNS
    table.properties
      tr
        th Servers
        td = @server.zone.dns.join(", ")
